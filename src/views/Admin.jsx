import React, { useState, useEffect, useContext } from "react";
import { useNavigate } from "react-router-dom";
import { AppContext } from "../AppContext";
import "./Admin.css"; // ‚úÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏

export default function Admin() {
  const { user, token } = useContext(AppContext);
  const navigate = useNavigate();

  const [categories, setCategories] = useState([]);
  const [products, setProducts] = useState([]);
  const [message, setMessage] = useState("");
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    console.log("Admin component mounted. User:", user);
    if (!user || !token) {
      console.warn("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ /signin");
      navigate("/signin");
      return;
    }

    if (user.role !== "ADMIN") {
      console.warn("–î–æ—Å—Ç—É–ø –¥–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ /");
      navigate("/");
      return;
    }

    fetchCategories();
    fetchProducts();
  }, [user, token, navigate]);

  const fetchCategories = () => {
    console.log("Fetching categories...");
    fetch("http://localhost:8081/Java_Web_211_war/products?type=categories", {
      headers: { Authorization: `Bearer ${token}` },
    })
      .then((res) => {
        console.log("Categories response status:", res.status);
        if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);
        return res.json();
      })
      .then((data) => {
        console.log("Fetched categories:", data);
        setCategories(data);
        setMessage("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.");
      })
      .catch((error) => {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:", error);
        setMessage("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó.");
      });
  };

  const fetchProducts = () => {
    console.log("Fetching products...");
    fetch("http://localhost:8081/Java_Web_211_war/products", {
      headers: { Authorization: `Bearer ${token}` },
    })
      .then((res) => {
        console.log("Products response status:", res.status);
        if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);
        return res.json();
      })
      .then((data) => {
        console.log("Fetched products:", data);
        setProducts(data);
        setMessage("‚úÖ –¢–æ–≤–∞—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.");
      })
      .catch((error) => {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—ñ–≤:", error);
        setMessage("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–æ–≤–∞—Ä–∏.");
      })
      .finally(() => setLoading(false));
  };

  const addProduct = (e) => {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);
    console.log("Adding product with data:", Object.fromEntries(formData));

    fetch("http://localhost:8081/Java_Web_211_war/products", {
      method: "POST",
      headers: { Authorization: `Bearer ${token}` },
      body: formData,
    })
      .then((res) => {
        console.log("Add product response status:", res.status);
        return res.json();
      })
      .then((result) => {
        console.log("Add product result:", result);
        if (result.status === "success") {
          setMessage("‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!");
          fetchProducts();
          form.reset();
        } else {
          setMessage(result.message || "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä.");
        }
      })
      .catch((error) => {
        console.error("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—É:", error);
        setMessage("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—É.");
      });
  };

  return (
    <div className="admin-panel">
      <h1 className="title">üõ†Ô∏è –ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h1>

      {message && <div className="message">{message}</div>}

      <section className="block categories">
        <h2>üìÅ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó</h2>
        <div className="grid">
          {categories.length > 0 ? (
            categories.map((c) => (
              <div key={c.categoryId} className="card category">
                <img
                  src={`/Java_Web_211_war/images/${c.categoryImageId}`}
                  alt={c.categoryTitle}
                />
                <p>{c.categoryTitle}</p>
              </div>
            ))
          ) : (
            <p>ü§∑‚Äç‚ôÇÔ∏è –ù–µ–º–∞—î –∫–∞—Ç–µ–≥–æ—Ä—ñ–π</p>
          )}
        </div>
      </section>

      <section className="block add-product">
        <h2>‚ûï –î–æ–¥–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç</h2>
        <form onSubmit={addProduct} className="form" encType="multipart/form-data">
          <input name="name" placeholder="–ù–∞–∑–≤–∞" required />
          <textarea name="description" placeholder="–û–ø–∏—Å" required></textarea>
          <input name="price" type="number" placeholder="–¶—ñ–Ω–∞" required />
          <input name="stock" type="number" placeholder="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–∞ —Å–∫–ª–∞–¥—ñ" required />
          <input name="code" placeholder="–ö–æ–¥ —Ç–æ–≤–∞—Ä—É" required />
          <input name="file1" type="file" accept="image/*" required />

          <select name="categoryId" required>
            <option value="">üóÇÔ∏è –û–±—Ä–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é</option>
            {categories.map((c) => (
              <option key={c.categoryId} value={c.categoryId}>
                {c.categoryTitle}
              </option>
            ))}
          </select>

          <button type="submit" className="btn-submit">
            üöÄ –î–æ–¥–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç
          </button>
        </form>
      </section>

      <section className="block products">
        <h2>üõçÔ∏è –¢–æ–≤–∞—Ä–∏</h2>
        {loading ? (
          <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤...</p>
        ) : products.length === 0 ? (
          <p>ü§∑‚Äç‚ôÄÔ∏è –¢–æ–≤–∞—Ä—ñ–≤ –ø–æ–∫–∏ –Ω–µ–º–∞—î!</p>
        ) : (
          <div className="grid">
            {products.map((p) => (
              <div key={p.productId} className="card product">
                <img
                  src={`/Java_Web_211_war/images/${p.imageId}`}
                  alt={p.name}
                />
                <div className="info">
                  <h3>{p.name}</h3>
                  <p>üí∞ {p.price} –≥—Ä–Ω</p>
                  <p>üì¶ {p.stock} —à—Ç.</p>
                  <p>üè∑Ô∏è {p.code}</p>
                </div>
              </div>
            ))}
          </div>
        )}
      </section>
    </div>
  );
}
