import React, { useContext, useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import { CartContext } from "../Cartcontext/CartContext";
import { ThemeContext } from "../../ThemeContext";
import { motion, AnimatePresence } from "framer-motion";
import Modal from "../../Modal/Modal";

const BASE_URL = "http://localhost:8081/Java_Web_211_war";

export default function CartPage() {
  const navigate = useNavigate();
  const {
    cartItems,
    addToCart,
    decreaseFromCart,
    removeFromCart,
    clearCart,
    totalItems,
    totalPrice,
    loading,
  } = useContext(CartContext);
  const { theme } = useContext(ThemeContext);
  const [isModalOpen, setIsModalOpen] = useState(false);

  useEffect(() => {
    console.log("‚û°Ô∏è –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ—Ä–∑–∏–Ω—ã");
    console.log("üõí –¢–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã:", cartItems);
  }, [cartItems]);

  const handleCheckout = () => {
    console.log("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞");
    navigate("/checkout");
  };

  const handleContinueShopping = () => {
    console.log("üõçÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–∫—É–ø–∫–∏");
    navigate("/shop");
  };

  if (loading) {
    return <div style={styles(theme).container}>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã...</div>;
  }

  if (!cartItems || cartItems.length === 0) {
    console.log("üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞");
    return (
      <div style={styles(theme).container}>
        <h1 style={styles(theme).title}>üõí –ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π</h1>
        <p style={styles(theme).emptyMessage}>
          –î–æ–¥–∞–π—Ç–µ —Ç–æ–≤–∞—Ä–∏ –¥–æ –∫–æ—à–∏–∫–∞, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —ó—Ö —Ç—É—Ç.
        </p>
        <button onClick={handleContinueShopping} style={styles(theme).continueBtn}>
          üõçÔ∏è –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏
        </button>
      </div>
    );
  }

  return (
    <div style={styles(theme).container}>
      <h1 style={styles(theme).title}>üõí –í–∞—à –∫–æ—à–∏–∫</h1>

      <AnimatePresence>
        {cartItems.map((item) => (
          <motion.div
            key={item.productId}
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, x: 100 }}
            transition={{ duration: 0.3 }}
            style={styles(theme).item}
          >
            <div style={styles(theme).imageContainer}>
              <img
                src={
                  item.imageId
                    ? `${BASE_URL}/storage/${item.imageId}`
                    : "/images/no-image.png"
                }
                alt={item.name}
                style={styles(theme).image}
                onError={(e) => {
                  e.target.src = "/images/no-image.png";
                }}
              />
            </div>

            <div style={styles(theme).details}>
              <h2 style={styles(theme).itemName}>{item.name}</h2>
              <p style={styles(theme).text}>
                –¶—ñ–Ω–∞: <strong>{item.price} –≥—Ä–Ω</strong>
              </p>

              <div style={styles(theme).quantityControl}>
                <button
                  onClick={() => decreaseFromCart(item.productId)}
                  style={styles(theme).qtyBtn}
                >
                  ‚àí
                </button>
                <span style={styles(theme).qtyText}>{item.quantity}</span>
                <button
                  onClick={() => addToCart(item)}
                  style={styles(theme).qtyBtn}
                >
                  +
                </button>
              </div>

              <button
                onClick={() => removeFromCart(item.productId)}
                style={styles(theme).removeBtn}
              >
                ‚ùå –í–∏–¥–∞–ª–∏—Ç–∏
              </button>

              <p style={styles(theme).funnyText}>
                –¢–∞ –±–µ—Ä–∏ —â–µ! –í–æ–Ω–æ —Ç–æ–±—ñ —Ç—Ä–µ–±–∞! üòÑ
              </p>
            </div>
          </motion.div>
        ))}
      </AnimatePresence>

      <div style={styles(theme).summary}>
        <h3>üß∫ –¢–æ–≤–∞—Ä—ñ–≤: {totalItems}</h3>
        <h3>üí∞ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {totalPrice} –≥—Ä–Ω</h3>
      </div>

      <div style={styles(theme).actions}>
        <button onClick={handleContinueShopping} style={styles(theme).continueBtn}>
          üõçÔ∏è –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏
        </button>
        <button onClick={handleCheckout} style={styles(theme).checkoutBtn}>
          ‚úÖ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        </button>
      </div>

      <button
        onClick={() => {
          console.log("üóëÔ∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã");
          setIsModalOpen(true);
        }}
        style={styles(theme).clearBtn}
      >
        üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫
      </button>

      <Modal
        isOpen={isModalOpen}
        onClose={() => {
          console.log("‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞");
          setIsModalOpen(false);
        }}
        onConfirm={() => {
          console.log("üóëÔ∏è –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É —á–µ—Ä–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ");
          clearCart();
          setIsModalOpen(false);
        }}
        theme={theme}
        title="–û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫?"
        description="–í–∏ –¥—ñ–π—Å–Ω–æ –±–∞–∂–∞—î—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏ –∑ –∫–æ—à–∏–∫–∞?"
      />
    </div>
  );
}


const styles = (theme) => ({
  container: {
    padding: "20px",
    maxWidth: "900px",
    margin: "30px auto",
    backgroundColor: theme === "night" ? "#1a1a1a" : "#f9f9f9",
    color: theme === "night" ? "#fff" : "#333",
    borderRadius: "10px",
    boxShadow: "0 0 20px rgba(0,0,0,0.5)",
  },
  title: {
    textAlign: "center",
    fontSize: "2.5rem",
    marginBottom: "30px",
    color: theme === "night" ? "#61dafb" : "#ff9800",
  },
  emptyMessage: {
    textAlign: "center",
    fontSize: "1.2rem",
    color: theme === "night" ? "#ccc" : "#555",
  },
  item: {
    display: "flex",
    alignItems: "center",
    marginBottom: "25px",
    borderBottom: `1px solid ${theme === "night" ? "#444" : "#ddd"}`,
    paddingBottom: "15px",
  },
  imageContainer: {
    width: "120px",
    height: "120px",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "#fff",
    borderRadius: "10px",
    marginRight: "25px",
    overflow: "hidden",
    padding: "8px",
  },
  image: {
    width: "100%",
    height: "100%",
    objectFit: "contain",
  },
  details: {
    flex: 1,
  },
  itemName: {
    marginBottom: "10px",
    color: theme === "night" ? "#61dafb" : "#333",
    fontSize: "1.5rem",
  },
  text: {
    marginBottom: "10px",
    fontSize: "1.1rem",
  },
  quantityControl: {
    display: "flex",
    gap: "10px",
    alignItems: "center",
    marginBottom: "15px",
  },
  qtyBtn: {
    padding: "10px 14px",
    backgroundColor: theme === "night" ? "#4caf50" : "#2196f3",
    color: "#fff",
    border: "none",
    borderRadius: "6px",
    fontSize: "1.2rem",
    cursor: "pointer",
    transition: "background 0.3s ease",
  },
  qtyText: {
    fontSize: "1.2rem",
    minWidth: "30px",
    textAlign: "center",
  },
  removeBtn: {
    padding: "10px 20px",
    backgroundColor: "#ff4b4b",
    color: "#fff",
    border: "none",
    borderRadius: "6px",
    cursor: "pointer",
    transition: "background 0.3s ease",
  },
  funnyText: {
    marginTop: "10px",
    color: theme === "night" ? "#ffc107" : "#ff5722",
    fontStyle: "italic",
  },
  summary: {
    textAlign: "right",
    marginTop: "30px",
    fontSize: "1.2rem",
  },
  actions: {
    display: "flex",
    justifyContent: "space-between",
    marginTop: "20px",
  },
  continueBtn: {
    padding: "12px 24px",
    backgroundColor: "#03a9f4",
    color: "#fff",
    border: "none",
    borderRadius: "8px",
    cursor: "pointer",
    fontSize: "1.1rem",
    transition: "background 0.3s ease",
  },
  checkoutBtn: {
    padding: "12px 24px",
    backgroundColor: "#4caf50",
    color: "#fff",
    border: "none",
    borderRadius: "8px",
    cursor: "pointer",
    fontSize: "1.1rem",
    transition: "background 0.3s ease",
  },
  clearBtn: {
    marginTop: "20px",
    padding: "14px 24px",
    backgroundColor: "#ff4b4b",
    color: "#fff",
    border: "none",
    borderRadius: "8px",
    cursor: "pointer",
    width: "100%",
    fontSize: "1.1rem",
    transition: "background 0.3s ease",
  },
});