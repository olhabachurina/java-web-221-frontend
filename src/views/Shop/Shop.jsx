import React, { useState, useEffect } from "react";
import { useNavigate, Link } from "react-router-dom"; // –¥–æ–¥–∞–ª–∏ Link –¥–ª—è breadcrumbs
import "./Shop.css";

const BASE_URL = "http://localhost:8081/Java_Web_211_war";

export default function Shop() {
  const [categories, setCategories] = useState([]);
  const [message, setMessage] = useState("üõçÔ∏è –í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Ç–æ–≤–∞—Ä—ñ–≤");
  const [loadingCategories, setLoadingCategories] = useState(false);

  const navigate = useNavigate();

  useEffect(() => {
    fetchCategories();
  }, []);

  const fetchCategories = async () => {
    setLoadingCategories(true);
    setMessage("‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π...");

    try {
      const response = await fetch(`${BASE_URL}/products?type=categories`);
      const data = await response.json();

      setCategories(data);
      setMessage("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ");
    } catch (error) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:", error);
      setMessage("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó");
    } finally {
      setLoadingCategories(false);
    }
  };

  const handleCategoryClick = (categorySlug) => {
    console.log(`‚û°Ô∏è –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó: ${categorySlug}`);
    navigate(`/category/${categorySlug}`);
  };

  return (
    <div className="shop-container">
      {/* –•–ª—ñ–±–Ω—ñ –∫—Ä–∏—Ö—Ç–∏ */}
      <nav className="breadcrumbs">
        <Link to="/">–ì–æ–ª–æ–≤–Ω–∞</Link> &gt; <span>–ö—Ä–∞–º–Ω–∏—Ü—è</span>
      </nav>

      <h1 className="shop-title">üõí –ö—Ä–∞–º–Ω–∏—Ü—è</h1>

      {/* Info / Loading Message */}
      {message && <div className="shop-message">{message}</div>}

      {/* –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó */}
      <section className="categories-section">
        <h2 className="section-title">üìÇ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó</h2>

        {loadingCategories && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π...</p>}

        <div className="categories-grid">
          {categories.length > 0 ? (
            categories.map((category) => (
              <div
                key={category.categoryId}
                className="category-card"
                onClick={() => handleCategoryClick(category.categorySlug)}
              >
                <div className="category-image-container">
                  <img
                    src={`${BASE_URL}/storage/${category.categoryImageId}`}
                    alt={category.categoryTitle}
                    className="category-image"
                  />
                </div>
                <h3 className="category-title">{category.categoryTitle}</h3>
              </div>
            ))
          ) : !loadingCategories ? (
            <p>ü§∑‚Äç‚ôÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>
          ) : null}
        </div>
      </section>
    </div>
  );
} 