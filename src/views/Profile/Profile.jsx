import React, { useContext, useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import { AppContext } from "../../AppContext";
const Profile = () => {
    const { user, setUser } = useContext(AppContext);
    const navigate = useNavigate();
    
    const [formData, setFormData] = useState({
        name: "",
        email: "",
        phone: "",
        city: "",
        address: "",
        birthdate: "–ù–µ–º–∞—î",
        role: "–ù–µ–º–∞—î",
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    useEffect(() => {
        if (!user || !user.id) {
            console.warn("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π!");
            return;
        }

        console.log("üîç –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å:", user);

        setFormData({
            name: user.name || "",
            email: user.emails?.[0] || "",
            phone: user.phones?.[0] || "",
            city: user.city || "",
            address: user.address || "",
            birthdate: user.birthdate || "–ù–µ–º–∞—î",
            role: user.role || "–ù–µ–º–∞—î",
        });
    }, [user]);

    const handleChange = (e) => {
        setFormData({ ...formData, [e.target.name]: e.target.value });
    };

    const saveChanges = async () => {
        if (!user || !user.id) {
            alert("‚ùå –í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ!");
            return;
        }

        const token = localStorage.getItem("token");
        if (!token) {
            alert("‚ùå –ü–æ–º–∏–ª–∫–∞: –¢–æ–∫–µ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π.");
            return;
        }

        const updatedUser = {
            name: formData.name,
            city: formData.city,
            address: formData.address,
            birthdate: formData.birthdate,
            phones: formData.phone ? [formData.phone] : user.phones,
            emails: formData.email ? [formData.email] : user.emails,
        };

        try {
            const response = await fetch(`http://localhost:8081/Java_Web_211_war/users/${user.id}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json", Authorization: `Bearer ${token}` },
                body: JSON.stringify(updatedUser),
            });

            if (!response.ok) throw new Error(`–ü–æ–º–∏–ª–∫–∞: ${response.status}`);

            const data = await response.json();
            setUser(data);
            alert("‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ!");
        } catch (err) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö:", err);
            alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏.");
        }
    };

    const deleteAccount = async () => {
        if (!window.confirm("üóë –¢–∞–∫–∏ –¥–∞? –í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç?")) return;
    
        if (!user || !user.id) {
            alert("‚ùå –í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ!");
            return;
        }
    
        const token = localStorage.getItem("token");
        if (!token) {
            alert("‚ùå –ü–æ–º–∏–ª–∫–∞: –¢–æ–∫–µ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π.");
            return;
        }
    
        try {
            const response = await fetch(`http://localhost:8081/Java_Web_211_war/users/${user.id}`, {
                method: "DELETE",
                headers: { Authorization: `Bearer ${token}` },
            });
    
            if (!response.ok) throw new Error(`–ü–æ–º–∏–ª–∫–∞: ${response.status}`);
    
            setUser(null);
            localStorage.removeItem("token");
            localStorage.removeItem("userId");
    
            // üõë –ü–æ–∫–∞–∑—É—î–º–æ –∂–∞—Ä—Ç –ø–µ—Ä–µ–¥ –≤–∏—Ö–æ–¥–æ–º
            alert("‚úÖ –ê–∫–∞—É–Ω—Ç —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.\n\n–û–¥–µ—Å–∏—Ç –ø–∏—Ç–∞—î —É –¥—Ä—É–≥–∞:\n‚Äî –Ø–∫ —Å–ø—Ä–∞–≤–∏?\n‚Äî –í–∏–¥–∞–ª–∏–≤ –∞–∫–∞—É–Ω—Ç...\n‚Äî –ù—É —ñ –¥—É—Ä–µ–Ω—å! –¢–∏ –∂ —É –º–µ—Ä–µ–∂—ñ –±—É–≤ —è–∫ —Ä–∏–±–∞ —É –≤–æ–¥—ñ! üêüüòÇ");
    
            navigate("/");
        } catch (err) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞:", err);
            alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç.");
        }
    };
    

    
    if (!user || !user.id) {
        return (
            <div style={styles.container}>
                <h1 style={styles.greeting}>üåä –û–π, —à–æ—Å—å –≤–∏ —Ç—É—Ç –∑–∞–±–ª—É–∫–∞–ª–∏!</h1>
                <p style={styles.text}>
                    –®–æ –≤–∏ —Ä–æ–±–∏—Ç–µ –≤ —á—É–∂–æ–º—É –ø—Ä–æ—Ñ—ñ–ª—ñ –±–µ–∑ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó? üôÑ  
                    –ô–¥—ñ—Ç—å –≤–∂–µ, —Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å, –±–æ –º–∞–º–∞ –∫–∞–∑–∞–ª–∞: "–ë–µ–∑ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó ‚Äì –Ω—ñ —Ä–∏–±–∞, –Ω—ñ –º‚Äô—è—Å–æ!"
                </p>
                <button onClick={() => navigate("/signup")} style={styles.button}>
                    üöÄ –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è
                </button>
                <button onClick={() => navigate("/")} style={styles.backButton}>
                    ‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É
                </button>
            </div>
        );
    }

    return (
        <div style={styles.container}>
            <h1 style={styles.greeting}>üéâ –í—ñ—Ç–∞—î–º–æ, {user.name}!</h1>
            <h2 style={styles.heading}>–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å</h2>

            <div style={styles.formContainer}>
                <div style={styles.column}>
                    <label>–Ü–º'—è:</label>
                    <input type="text" name="name" value={formData.name} onChange={handleChange} style={styles.input} />
                    <label>Email:</label>
                    <input type="email" name="email" value={formData.email} onChange={handleChange} style={styles.input} />
                    <label>–¢–µ–ª–µ—Ñ–æ–Ω:</label>
                    <input type="text" name="phone" value={formData.phone} onChange={handleChange} style={styles.input} />
                </div>

                <div style={styles.column}>
                    <label>–ú—ñ—Å—Ç–æ:</label>
                    <input type="text" name="city" value={formData.city} onChange={handleChange} style={styles.input} />
                    <label>–ê–¥—Ä–µ—Å–∞:</label>
                    <input type="text" name="address" value={formData.address} onChange={handleChange} style={styles.input} />
                    <label>–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è:</label>
                    <input type="text" name="birthdate" value={formData.birthdate} onChange={handleChange} style={styles.input} />
                </div>
            </div>

            <p><strong>–†–æ–ª—å:</strong> {formData.role}</p>

            <button onClick={saveChanges} style={styles.button}>üíæ –ó–±–µ—Ä–µ–≥—Ç–∏</button>
            <button onClick={deleteAccount} style={styles.deleteButton}>üóë –í–∏–¥–∞–ª–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç</button>
            <button onClick={() => navigate("/")} style={styles.backButton}>‚¨ÖÔ∏è –ù–∞ –≥–æ–ª–æ–≤–Ω—É</button>
        </div>
    );
};

/* üé® –°–¢–ò–õ–Ü */
const styles = {
    container: { maxWidth: "600px", margin: "40px auto", padding: "30px", backgroundColor: "#111", color: "#fff", textAlign: "center", borderRadius: "10px", boxShadow: "0px 4px 10px rgba(0,0,0,0.3)" },
    greeting: { fontSize: "2rem", color: "#FFD700", marginBottom: "10px" },
    heading: { fontSize: "2rem", color: "#61dafb", marginBottom: "20px" },
    text: { fontSize: "1.2rem", marginBottom: "20px", color: "#ccc" },
    input: { width: "100%", padding: "10px", borderRadius: "5px", backgroundColor: "#222", color: "#fff", border: "1px solid #61dafb", fontSize: "16px", marginBottom: "10px" },
    button: { backgroundColor: "#61dafb", padding: "12px 20px", borderRadius: "8px", cursor: "pointer", color: "#fff", fontSize: "16px", fontWeight: "bold", border: "none" },
    deleteButton: { backgroundColor: "#f44336", padding: "12px 20px", borderRadius: "8px", cursor: "pointer", color: "#fff", fontSize: "16px", fontWeight: "bold", border: "none" },
    backButton: { backgroundColor: "#ffcc00", padding: "12px 20px", borderRadius: "8px", cursor: "pointer", color: "#111", fontSize: "16px", fontWeight: "bold", border: "none", marginTop: "10px" },
};

export default Profile;