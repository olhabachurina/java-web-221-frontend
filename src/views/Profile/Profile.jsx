import React, { useContext, useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import AppContext from "../../AppContext.jsx";
const API_URL = "http://localhost:8081/Java_Web_211_war";

function Profile() {
    const { user } = useContext(AppContext);

    useEffect(() => {
        console.log("üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", user);
    }, [user]);

    return user && Object.keys(user).length > 0 ? (
        <AuthView user={user} />
    ) : (
        <AnonView />
    );
}

function AuthView({ user }) {
    const { setUser } = useContext(AppContext);
    const navigate = useNavigate();

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ email –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
    const [formData, setFormData] = useState({
        name: "",
        email: "",
        phone: "",
        city: "",
        address: "",
        birthdate: "",
    });

    useEffect(() => {
        if (user && Object.keys(user).length > 0) {
            setFormData({
                name: user.name || "",
                // –ï—Å–ª–∏ –µ—Å—Ç—å email, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∏–Ω–∞—á–µ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
                email: user.emails && user.emails.length > 0 ? user.emails[0] : "",
                phone: user.phones?.[0] || "",
                city: user.city || "",
                address: user.address || "",
                birthdate: user.birthdate || "–ù–µ–º–∞—î",
                role: user.role || "–ù–µ–º–∞—î",
            });
        }
    }, [user]);

    const handleChange = (e) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value,
        });
    };

    const saveChanges = async () => {
        const userId = user?.id || user?.user_id;
        if (!userId) {
            alert("‚ùå –ü–æ–º–∏–ª–∫–∞: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π.");
            return;
        }

        const token = user?.token || localStorage.getItem("token");
        if (!token) {
            alert("‚ùå –ü–æ–º–∏–ª–∫–∞: –¢–æ–∫–µ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π.");
            return;
        }

        // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –≤–∫–ª—é—á–∞—è –Ω–æ–≤—ã–π email, –µ—Å–ª–∏ –æ–Ω –∏–∑–º–µ–Ω—ë–Ω
        const updatedUser = {
            name: formData.name || user.name,
            city: formData.city || user.city,
            address: formData.address || user.address,
            birthdate: formData.birthdate || user.birthdate,
            phones: formData.phone ? [formData.phone] : user.phones,
            // –ï—Å–ª–∏ email –≤–≤–µ–¥—ë–Ω, –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ –∫–∞–∫ –º–∞—Å—Å–∏–≤ –∏–∑ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
            emails: formData.email ? [formData.email] : user.emails,
        };

        // –£–¥–∞–ª—è–µ–º –ø–∞—Ä–æ–ª—å, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        delete updatedUser.password;

        // –û—á–∏—â–∞–µ–º –æ—Ç `null` –∏ `undefined`
        const cleanedUser = Object.fromEntries(
            Object.entries(updatedUser).filter(([_, v]) => v !== null && v !== undefined)
        );

        const requestUrl = `${API_URL}/users/${userId}`;
        console.log("=== üìù –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö (PUT) ===");
        console.log("üîó URL:", requestUrl);
        console.log("üì§ –î–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏:", cleanedUser);
        console.log("üîë –¢–æ–∫–µ–Ω:", token);

        try {
            const response = await fetch(requestUrl, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer ${token}`,
                },
                credentials: "include",
                body: JSON.stringify(cleanedUser),
            });

            if (!response.ok) {
                const errorData = await response.text();
                console.error("‚ùå –°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –ø–æ–º–∏–ª–∫—É:", response.status, errorData);
                alert(`–ü–æ–º–∏–ª–∫–∞: ${response.status} - ${errorData}`);
                return;
            }

            const data = await response.json();
            console.log("‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ!", data);
            setUser(data);
            alert("–î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ!");
        } catch (err) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö:", err);
            alert("–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä.");
        }
    };

    const deleteAccount = async () => {
        if (!window.confirm("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç.–¢–∞–∫—ñ –¥–∞?")) return;

        const userId = user?.id || user?.user_id;
        if (!userId) {
            console.error("[deleteAccount] ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. user =", user);
            alert("‚ùå –ü–æ–º–∏–ª–∫–∞: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π.");
            return;
        }

        const token = user?.token || localStorage.getItem("token");
        if (!token) {
            alert("‚ùå –ü–æ–º–∏–ª–∫–∞: –¢–æ–∫–µ–Ω –≤—ñ–¥—Å—É—Ç–Ω—ñ–π.");
            return;
        }

        console.log("=== üóë [deleteAccount] –ú'—è–∫–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞ ===");
        const requestUrl = `${API_URL}/users/${userId}`;
        console.log(`üîó [deleteAccount] DELETE ${requestUrl}`);

        try {
            const response = await fetch(requestUrl, {
                method: "DELETE",
                headers: {
                    "Authorization": `Bearer ${token}`,
                },
                credentials: "include",
            });

            if (!response.ok) {
                const errorData = await response.text();
                console.error("‚ùå –°–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ –ø–æ–º–∏–ª–∫—É:", response.status, errorData);
                alert(`–ü–æ–º–∏–ª–∫–∞: ${response.status} - ${errorData}`);
                return;
            }

            console.log("‚úÖ [deleteAccount] –ê–∫–∞—É–Ω—Ç —É—Å–ø—ñ—à–Ω–æ –ø–æ–º—ñ—á–µ–Ω–æ —è–∫ –≤–∏–¥–∞–ª–µ–Ω–∏–π (soft delete)");

            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
            setUser(null);
            navigate("/");
        } catch (err) {
            console.error("‚ùå [deleteAccount] –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞:", err);
            alert("–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è. –ú–æ–∂–ª–∏–≤–æ, —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –∞–±–æ URL –Ω–µ–≤–µ—Ä–Ω–∏–π.");
        }
    };

    return (
        <div style={styles.container}>
            <h1 style={styles.heading}>–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å</h1>

            <div style={styles.infoBlock}>
                <p><strong>ID:</strong> {user?.id || user?.user_id}</p>
                <p><strong>–õ–æ–≥—ñ–Ω:</strong> {user?.login}</p>
                <p><strong>Email:</strong> {user?.emails?.[0] || "–ù–µ–º–∞—î"}</p>
                <p><strong>–†–æ–ª—å:</strong> {user?.role || "–ù–µ–º–∞—î"}</p>
            </div>

            <div style={styles.formRow}>
                <div style={styles.formGroup}>
                    <label>–Ü–º'—è:</label>
                    <input
                        type="text"
                        name="name"
                        value={formData.name}
                        onChange={handleChange}
                        style={styles.input}
                    />
                </div>

                <div style={styles.formGroup}>
                    <label>Email:</label>
                    <input
                        type="email"
                        name="email"
                        value={formData.email}
                        onChange={handleChange}
                        style={styles.input}
                    />
                </div>
            </div>

            <div style={styles.formRow}>
                <div style={styles.formGroup}>
                    <label>–¢–µ–ª–µ—Ñ–æ–Ω:</label>
                    <input
                        type="text"
                        name="phone"
                        value={formData.phone}
                        onChange={handleChange}
                        style={styles.input}
                    />
                </div>
            </div>

            <div style={styles.formRow}>
                <div style={styles.formGroup}>
                    <label>–ú—ñ—Å—Ç–æ:</label>
                    <input
                        type="text"
                        name="city"
                        value={formData.city}
                        onChange={handleChange}
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –º—ñ—Å—Ç–æ"
                        style={styles.input}
                    />
                </div>

                <div style={styles.formGroup}>
                    <label>–ê–¥—Ä–µ—Å–∞:</label>
                    <input
                        type="text"
                        name="address"
                        value={formData.address}
                        onChange={handleChange}
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É"
                        style={styles.input}
                    />
                </div>
            </div>

            <div style={styles.infoBlock}>
                <p><strong>–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è:</strong> {formData.birthdate}</p>
            </div>

            <div style={styles.buttons}>
                <button onClick={saveChanges} style={styles.saveButton}>–ó–±–µ—Ä–µ–≥—Ç–∏</button>
                <button onClick={deleteAccount} style={styles.deleteButton}>–í–∏–¥–∞–ª–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç</button>
            </div>
        </div>
    );
}

function AnonView() {
    return (
        <div style={styles.container}>
            <h1 style={styles.heading}>–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ</h1>
            <p>–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ø—Ä–æ—Ñ—ñ–ª—é</p>
        </div>
    );
}
const styles = {
  container: {
    maxWidth: "600px",
    margin: "40px auto",
    backgroundColor: "rgba(0, 0, 0, 0.7)",
    backdropFilter: "blur(10px)",
    padding: "30px",
    borderRadius: "10px",
    color: "#fff",
    boxShadow: "0 0 30px rgba(0,0,0,0.8)",
    textAlign: "center",
  },
  heading: {
    fontSize: "2.5rem",
    marginBottom: "20px",
    color: "#61dafb",
    textShadow: "1px 1px 4px rgba(97, 218, 251, 0.6)",
  },
  infoBlock: {
    margin: "20px 0",
    lineHeight: "1.8",
  },
  formRow: {
    display: "flex",
    justifyContent: "space-between",
    gap: "20px",
    marginBottom: "15px",
  },
  formGroup: {
    flex: 1,
    display: "flex",
    flexDirection: "column",
    alignItems: "flex-start",
  },
  input: {
    width: "100%",
    padding: "10px",
    marginTop: "5px",
    borderRadius: "5px",
    border: "1px solid #61dafb",
    backgroundColor: "#121212",
    color: "#fff",
    outline: "none",
    transition: "border 0.3s ease",
  },
  buttons: {
    marginTop: "30px",
    display: "flex",
    justifyContent: "center",
    gap: "20px",
  },
  saveButton: {
    backgroundColor: "#61dafb",
    color: "#121212",
    border: "none",
    padding: "14px 28px",
    cursor: "pointer",
    borderRadius: "8px",
    fontSize: "1rem",
    fontWeight: "bold",
    transition: "transform 0.2s ease",
  },
  deleteButton: {
    backgroundColor: "#f44336",
    color: "#fff",
    border: "none",
    padding: "14px 28px",
    cursor: "pointer",
    borderRadius: "8px",
    fontSize: "1rem",
    fontWeight: "bold",
    transition: "transform 0.2s ease",
  },
};

export default Profile;