import React, { useState, useContext } from "react";
import { useNavigate } from "react-router-dom";
import { CartContext } from "../Cartcontext/CartContext";
import { ThemeContext } from "../../ThemeContext";

export default function CheckoutPage() {
  const { cartItems, totalPrice, clearCart } = useContext(CartContext);
  const { theme } = useContext(ThemeContext);
  const navigate = useNavigate();

  const [orderDetails, setOrderDetails] = useState({
    name: "",
    address: "",
    phone: "",
  });
  const [isSubmitted, setIsSubmitted] = useState(false);

  // –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ –ø–æ–ª—ñ–≤ —Ñ–æ—Ä–º–∏
  const handleChange = (e) => {
    const { name, value } = e.target;
    setOrderDetails((prev) => ({
      ...prev,
      [name]: value,
    }));
    console.log(`‚úèÔ∏è –ó–º—ñ–Ω—é—î–º–æ ${name}:`, value);
  };

  // –û–±—Ä–æ–±–Ω–∏–∫ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∏
  const handleSubmit = (e) => {
    e.preventDefault();

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏
    if (!orderDetails.name || !orderDetails.address || !orderDetails.phone) {
      alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è!");
      return;
    }

    console.log("‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ:", orderDetails);
    console.log("üõí –ö–æ—Ä–∑–∏–Ω–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", cartItems);
    console.log("üí∞ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", totalPrice);

    // –°–∏–º—É–ª—è—Ü—ñ—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    setIsSubmitted(true);
    clearCart();

    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫.
    setTimeout(() => {
      navigate("/order-confirmation");
    }, 3000);
  };

  return (
    <div style={{ padding: "20px", ...styles(theme).container }}>
      <h1 style={styles(theme).title}>–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h1>
      {isSubmitted ? (
        <div>
          <p style={styles(theme).text}>
            –î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è! –ú–∏ –∑–≤‚Äô—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.
          </p>
        </div>
      ) : (
        <form onSubmit={handleSubmit} style={styles(theme).form}>
          <div style={styles(theme).formGroup}>
            <label style={styles(theme).label}>–Ü–º'—è:</label>
            <input
              type="text"
              name="name"
              value={orderDetails.name}
              onChange={handleChange}
              style={styles(theme).input}
            />
          </div>
          <div style={styles(theme).formGroup}>
            <label style={styles(theme).label}>–ê–¥—Ä–µ—Å–∞:</label>
            <input
              type="text"
              name="address"
              value={orderDetails.address}
              onChange={handleChange}
              style={styles(theme).input}
            />
          </div>
          <div style={styles(theme).formGroup}>
            <label style={styles(theme).label}>–¢–µ–ª–µ—Ñ–æ–Ω:</label>
            <input
              type="text"
              name="phone"
              value={orderDetails.phone}
              onChange={handleChange}
              style={styles(theme).input}
            />
          </div>
          <div style={styles(theme).summary}>
            <p style={styles(theme).text}>–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {totalPrice} –≥—Ä–Ω</p>
          </div>
          <button type="submit" style={styles(theme).checkoutBtn}>
            –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
          </button>
        </form>
      )}
    </div>
  );
}

const styles = (theme) => ({
  container: {
    maxWidth: "600px",
    margin: "0 auto",
    backgroundColor: theme.background,
    color: theme.text,
    padding: "20px",
    borderRadius: "8px",
    boxShadow: "0 2px 5px rgba(0,0,0,0.1)",
  },
  title: {
    textAlign: "center",
    marginBottom: "20px",
  },
  text: {
    fontSize: "16px",
    marginBottom: "10px",
  },
  form: {
    display: "flex",
    flexDirection: "column",
  },
  formGroup: {
    marginBottom: "15px",
  },
  label: {
    marginBottom: "5px",
    fontWeight: "bold",
    display: "block",
  },
  input: {
    padding: "10px",
    fontSize: "16px",
    borderRadius: "4px",
    border: "1px solid #ccc",
    width: "100%",
  },
  summary: {
    marginBottom: "20px",
  },
  checkoutBtn: {
    padding: "10px 20px",
    fontSize: "16px",
    backgroundColor: theme.buttonBackground,
    color: theme.buttonText,
    border: "none",
    borderRadius: "4px",
    cursor: "pointer",
  },
});